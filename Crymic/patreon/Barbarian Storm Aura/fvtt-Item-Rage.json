{
  "name": "Rage",
  "type": "feat",
  "data": {
    "description": {
      "value": "<p>In battle, you fight with primal ferocity. On your turn, you can enter a rage as a bonus action.&nbsp;While raging, you gain the following benefits if you aren't wearing heavy armor:</p>\n<ul>\n<li>\n<p>You have advantage on Strength checks and Strength saving throws.</p>\n</li>\n<li>\n<p>When you make a melee weapon attack using Strength, you gain a bonus to the damage roll that increases as you gain levels as a barbarian, as shown in the Rage Damage column of the Barbarian table.</p>\n</li>\n<li>\n<p>You have resistance to bludgeoning, piercing, and slashing damage.</p>\n</li>\n</ul>\n<p>If you are able to cast spells, you can't cast them or concentrate on them while raging.&nbsp;</p>\n<p>Your rage lasts for 1 minute. It ends early if you are knocked unconscious or if your turn ends and you haven't attacked a hostile creature since your last turn or taken damage since then. You can also end your rage on your turn as a bonus action.&nbsp;</p>\n<p>Once you have raged the number of times shown for your barbarian level in the Rages column in the table below, you must finish a long rest before you can rage again.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 48",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": "",
      "type": "lr"
    },
    "consume": {
      "type": "attribute",
      "target": "",
      "amount": 1
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": null,
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell",
      "value": ""
    },
    "requirements": "Barbarian 1",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attributes": {
      "spelldc": 10
    }
  },
  "sort": 1600000,
  "flags": {
    "entityorder": {
      "order": 204
    },
    "dynamiceffects": {
      "effects": [
        {
          "modSpecKey": "data.traits.dr.value",
          "value": "slashing",
          "mode": "+",
          "targetSpecific": false,
          "id": 1,
          "itemId": "tcedvxIhdFAKYuZi",
          "active": true,
          "_targets": [],
          "label": "Traits Damage Resistance"
        },
        {
          "modSpecKey": "data.traits.dr.value",
          "value": "bludgeoning",
          "mode": "+",
          "targetSpecific": false,
          "id": 2,
          "itemId": "tcedvxIhdFAKYuZi",
          "active": true,
          "_targets": [],
          "label": "Traits Damage Resistance"
        },
        {
          "modSpecKey": "data.traits.dr.value",
          "value": "slashing",
          "mode": "+",
          "targetSpecific": false,
          "id": 3,
          "itemId": "tcedvxIhdFAKYuZi",
          "active": true,
          "_targets": [],
          "label": "Traits Damage Resistance"
        },
        {
          "modSpecKey": "data.bonuses.mwak.damage",
          "value": "2",
          "mode": "+",
          "targetSpecific": false,
          "id": 4,
          "itemId": "tcedvxIhdFAKYuZi",
          "active": true,
          "_targets": [],
          "label": "Bonuses Melee Weapon Damage"
        },
        {
          "modSpecKey": "flags.dnd5e.conditions",
          "value": "Rage",
          "mode": "+",
          "targetSpecific": false,
          "id": 6,
          "itemId": "tcedvxIhdFAKYuZi",
          "active": true,
          "_targets": [],
          "label": "Flags Condition"
        },
        {
          "modSpecKey": "macro.itemMacro",
          "value": "@target",
          "mode": "+",
          "targetSpecific": false,
          "id": 7,
          "itemId": "tcedvxIhdFAKYuZi",
          "active": true,
          "_targets": [],
          "label": "Macro Item Macro"
        }
      ]
    },
    "itemacro": {
      "macro": {
        "_data": {
          "name": "Rage",
          "type": "script",
          "scope": "global",
          "command": "(async()=>{\nconst barb = canvas.tokens.get(args[1]);\nlet get_center = barb.center;\nasync function aoe_aura(barb, get_center){\nlet get_texture = 'modules/jb2a_patreon/Library/3rd_Level/Call_Lightning/CallLightning_01_Blue_1000x1000.webm';\nconst find_template = canvas.templates.placeables.find(i => i.data.user === game.user.id && i.data.texture === get_texture);\nif(!find_template){\n    const templateData = [{\n    borderColor : \"#6b6b6b\",\n    direction : 40,\n    distance : \"13\",\n    fillColor : \"#ffffff\",\n    locked : false,\n    tmfxPreset : \"Bloomed Texture\",\n    tmfxTextureAlpha : 0.5,\n    t : \"circle\",\n    user : game.user.id,\n    x : get_center.x,\n    y : get_center.y,\n    texture: get_texture\n  }];\n    await MeasuredTemplate.create(templateData);\n  }\n  else {\n    await find_template.update({\"x\": get_center.x, \"y\": get_center.y});\n  }\n}\nasync function stormTemplate(scene, token, update, flags, id) {\n  let target = await canvas.tokens.get(args[1]);\n  let movement = await getProperty(update, \"x\") || await getProperty(update, \"y\");\n  if (movement !== undefined) {\n    if (target.id === barb.id) get_center = barb.center;\n    aoe_aura(barb, get_center);\n    }\n}\n\nif(args[0] === \"on\"){\nconst hookId = Hooks.on(\"updateToken\", stormTemplate);\nDAE.setFlag(barb.actor, \"rageTemplate\", hookId);\naoe_aura(barb, get_center);\n}\n\nif(args[0] === \"off\"){\nconst hookId = DAE.getFlag(barb.actor, \"rageTemplate\");\nHooks.off(\"updateToken\", hookId);\nDAE.unsetFlag(barb.actor, \"rageTemplate\");\nlet get_texture = 'modules/jb2a_patreon/Library/3rd_Level/Call_Lightning/CallLightning_01_Blue_1000x1000.webm';\nlet find_template = canvas.templates.placeables.find(i => i.data.user === game.user.id && i.data.texture === get_texture).delete();\n}\n})();",
          "author": "feceaHtk8xrriPzY"
        },
        "data": {
          "name": "Rage",
          "type": "script",
          "scope": "global",
          "command": "(async()=>{\nconst barb = canvas.tokens.get(args[1]);\nlet get_center = barb.center;\nasync function aoe_aura(barb, get_center){\nlet get_texture = 'modules/jb2a_patreon/Library/3rd_Level/Call_Lightning/CallLightning_01_Blue_1000x1000.webm';\nconst find_template = canvas.templates.placeables.find(i => i.data.user === game.user.id && i.data.texture === get_texture);\nif(!find_template){\n    const templateData = [{\n    borderColor : \"#6b6b6b\",\n    direction : 40,\n    distance : \"13\",\n    fillColor : \"#ffffff\",\n    locked : false,\n    tmfxPreset : \"Bloomed Texture\",\n    tmfxTextureAlpha : 0.5,\n    t : \"circle\",\n    user : game.user.id,\n    x : get_center.x,\n    y : get_center.y,\n    texture: get_texture\n  }];\n    await MeasuredTemplate.create(templateData);\n  }\n  else {\n    await find_template.update({\"x\": get_center.x, \"y\": get_center.y});\n  }\n}\nasync function stormTemplate(scene, token, update, flags, id) {\n  let target = await canvas.tokens.get(args[1]);\n  let movement = await getProperty(update, \"x\") || await getProperty(update, \"y\");\n  if (movement !== undefined) {\n    if (target.id === barb.id) get_center = barb.center;\n    aoe_aura(barb, get_center);\n    }\n}\n\nif(args[0] === \"on\"){\nconst hookId = Hooks.on(\"updateToken\", stormTemplate);\nDAE.setFlag(barb.actor, \"rageTemplate\", hookId);\naoe_aura(barb, get_center);\n}\n\nif(args[0] === \"off\"){\nconst hookId = DAE.getFlag(barb.actor, \"rageTemplate\");\nHooks.off(\"updateToken\", hookId);\nDAE.unsetFlag(barb.actor, \"rageTemplate\");\nlet get_texture = 'modules/jb2a_patreon/Library/3rd_Level/Call_Lightning/CallLightning_01_Blue_1000x1000.webm';\nlet find_template = canvas.templates.placeables.find(i => i.data.user === game.user.id && i.data.texture === get_texture).delete();\n}\n})();",
          "author": "feceaHtk8xrriPzY"
        },
        "options": {},
        "apps": {},
        "compendium": null
      }
    },
    "favtab": {
      "isFavorite": true,
      "sort": 200000
    },
    "maestro": {
      "playlist": "1pfyzgX2x13v3cwu",
      "track": "LMyqqrIvbzf1RSCy"
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false
    },
    "betterCurses": {
      "isCurse": false,
      "curseName": "",
      "formula": "",
      "mwak": false,
      "rwak": false,
      "msak": false,
      "rsak": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "innocenti-openlock": {
      "enabled": false,
      "keylock": "",
      "wallCoord": "",
      "disarmTrap": 10,
      "findTrap": 10,
      "skillfindTrap": "prc",
      "passive": 10,
      "forceLock": 12,
      "openLock": 10,
      "toolsBreak": 5
    },
    "midi-qol": {
      "onUseMacroName": ""
    },
    "core": {
      "sourceId": "Item.NCUx37JMPxqTuAIo"
    },
    "autoanimations": {
      "killAnim": false,
      "override": false,
      "animType": "t1",
      "animName": "",
      "color": "n1",
      "dtvar": "dt1",
      "explosion": false,
      "explodeVariant": "ev1",
      "explodeColor": "ec1",
      "explodeRadius": "0",
      "explodeLoop": "1"
    },
    "exportSource": {
      "world": "avadol_v2",
      "system": "dnd5e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.2.4"
    }
  },
  "img": "graphics/icons/spell_conditions/da_spell_252.webp",
  "effects": [
    {
      "_id": "oyO9WWvVoiWDYs3N",
      "flags": {
        "dae": {
          "stackable": false,
          "specialDuration": "None",
          "transfer": false
        }
      },
      "changes": [
        {
          "key": "data.traits.dr.value",
          "value": "bludgeoning",
          "mode": 2,
          "priority": 20
        },
        {
          "key": "data.traits.dr.value",
          "value": "piercing",
          "mode": 2,
          "priority": 20
        },
        {
          "key": "data.traits.dr.value",
          "value": "slashing",
          "mode": 2,
          "priority": 20
        },
        {
          "key": "data.bonuses.weapon.damage",
          "value": "(ceil(floor(@classes.barbarian.levels/(9-(floor(@classes.barbarian.levels/9)))+2)))",
          "mode": 0,
          "priority": 20
        },
        {
          "key": "flags.midi-qol.advantage.ability.check.str",
          "value": "1",
          "mode": 2,
          "priority": 20
        },
        {
          "key": "flags.midi-qol.advantage.ability.save.str",
          "value": "1",
          "mode": 2,
          "priority": 20
        },
        {
          "key": "macro.itemMacro",
          "value": "@target",
          "mode": 0,
          "priority": 20
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "icon": "graphics/icons/spell_conditions/da_spell_252.webp",
      "label": "Rage",
      "tint": "",
      "transfer": false
    }
  ],
  "_id": "zyPJ3Ma8O3SQdRop"
}