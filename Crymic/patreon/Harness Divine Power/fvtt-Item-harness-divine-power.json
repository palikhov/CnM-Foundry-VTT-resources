{
  "name": "Harness Divine Power",
  "type": "feat",
  "img": "icons/environment/settlement/gazebo.webp",
  "data": {
    "description": {
      "value": "<p><em>2nd-level cleric feature</em><br />You can expend a use of your Channel Divinity to fuel your spells. As a bonus action, you touch your holy symbol, utter a prayer, and regain one expended spell slot, the level of which can be no higher than half your proficiency bonus (rounded up). The number of times you can use this feature is based on the level you’ve reached in this class: 2nd level, once; 6th level, twice; and 18th level, thrice. You regain all expended uses when you finish a long rest.</p>\n\n",
      "chat": "",
      "unidentified": ""
    },
    "source": "Tasha’s Cauldron of Everything",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": null,
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Cleric",
    "recharge": {
      "value": null,
      "charged": false
    }
  },
  "effects": [],
  "sort": 0,
  "flags": {
    "ddbimporter": {
      "id": 3021050,
      "data": {
        "id": 3021050,
        "definitionKey": "class-feature:3021050",
        "entityTypeId": 12168134,
        "displayOrder": 2,
        "name": "Harness Divine Power",
        "description": "<p><em>2nd-level cleric feature</em><br />You can expend a use of your Channel Divinity to fuel your spells. As a bonus action, you touch your holy symbol, utter a prayer, and regain one expended spell slot, the level of which can be no higher than half your proficiency bonus (rounded up). The number of times you can use this feature is based on the level you’ve reached in this class: 2nd level, once; 6th level, twice; and 18th level, thrice. You regain all expended uses when you finish a long rest.</p>",
        "snippet": "You can expend a use of your <em>Channel Divinity</em> to fuel your spells. As a bonus action, you regain one expended spell slot of up to level {{(proficiency/2)@roundup#unsigned}}. You can use this feature {{scalevalue#unsigned}} times. You regain all expended uses when you finish a long rest.",
        "activation": null,
        "multiClassDescription": "",
        "requiredLevel": 2,
        "isSubClassFeature": false,
        "limitedUse": [
          {
            "level": null,
            "uses": 1
          }
        ],
        "hideInBuilder": false,
        "hideInSheet": false,
        "sourceId": 67,
        "sourcePageNumber": 30,
        "creatureRules": [],
        "levelScales": [
          {
            "id": 388377,
            "level": 2,
            "description": "1 use",
            "dice": {
              "diceCount": null,
              "diceValue": null,
              "diceMultiplier": null,
              "fixedValue": null,
              "diceString": null
            },
            "fixedValue": 1
          },
          {
            "id": 388378,
            "level": 6,
            "description": "2 uses",
            "dice": {
              "diceCount": null,
              "diceValue": null,
              "diceMultiplier": null,
              "fixedValue": null,
              "diceString": null
            },
            "fixedValue": 2
          },
          {
            "id": 388379,
            "level": 18,
            "description": "3 uses",
            "dice": {
              "diceCount": null,
              "diceValue": null,
              "diceMultiplier": null,
              "fixedValue": null,
              "diceString": null
            },
            "fixedValue": 3
          }
        ],
        "infusionRules": [],
        "spellListIds": [],
        "classId": 2,
        "featureType": 2,
        "sources": [
          {
            "sourceId": 67,
            "pageNumber": null,
            "sourceType": 1
          }
        ],
        "affectedFeatureDefinitionKeys": [],
        "entityType": "class-feature",
        "entityID": 3021050
      },
      "featureId": 3021050,
      "requiredLevel": 2,
      "class": "Cleric",
      "classId": 2,
      "subClass": ""
    },
    "core": {
      "sourceId": "Compendium.world.ddb-darklands-class-features.zEp4nKWEsK6c2ow2"
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "midi-qol": {
      "onUseMacroName": "ItemMacro"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Harness Divine Power",
          "type": "script",
          "author": "Tyd5yiqWrRZMvG30",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "// Use Midi-qol + Item Macro. That will trigger resouce consumption.\n(async()=>{\n    let actorD = canvas.tokens.get(args[0].tokenId).actor;\n    if(actorD.data.data.spells.spell1.max === 0) return ui.notifications.error(`No spell slots found on ${actorD.name}`);\n    let rollData = await actorD.getRollData();\n    let prof = Math.ceil(rollData.prof/2);\n    let inputText = \"\";\n    if (hasAvailableSlot(actor)) {\n        // Get options for available slots\n        for (let i = 1; i <= prof; i++) {\n            let chosenSpellSlots = getSpellSlots(actorD, i);\n            let minSlots = chosenSpellSlots.value;\n            let maxSlots = chosenSpellSlots.max;\n            if (minSlots != maxSlots){\n                inputText += `<div class=\"form-group\"><label for=\"spell${i}\">Spell Slot Level ${i} [${minSlots}/${maxSlots}]</label><input id=\"spell${i}\" name=\"spellSlot\" value=\"${i}\" type=\"radio\"></div>`;\n            }\n        }\n        new Dialog({\n            title: \"Harniess Divine Power\",\n            content: `<form><p>Choose 1 spell slot to restore</p><hr>${inputText}</form>`,\n            buttons: {\n                recover: {\n                    icon: '<i class=\"fas fa-check\"></i>',\n                    label: \"Recover\",\n                    callback: async (html) => {\n                        let selected_slot = html.find('input[name=\"spellSlot\"]:checked');\n                        let slot = \"\";\n                        let num = \"\";\n                        for(let i = 0; i < selected_slot.length; i++) {\n                            slot = selected_slot[i].id;\n                            num = selected_slot[i].value;\n                        }\n                        spell_refund(actorD, slot);\n                        let roll_results = `<div>Regains 1 spell slot, Level ${num}.</div>`;\n                        const chatMessage = game.messages.get(args[0].itemCardId);\n                        let content = duplicate(chatMessage.data.content);\n                        const searchString =  /<div class=\"midi-qol-saves-display\">[\\s\\S]*<div class=\"end-midi-qol-saves-display\">/g;\n                        const replaceString = `<div class=\"midi-qol-saves-display\"><div class=\"end-midi-qol-saves-display\">${roll_results}`;\n                        content = content.replace(searchString, replaceString);\n                        chatMessage.update({content: content});\n                    }\n                }\n            }\n        }).render(true);\n    } else {\n        return ui.notifications.warn(`You aren't missing any spell slots.`);    \n    }\n    \n    async function spell_refund(actorD, slot, num) {\n      let actor_data = duplicate(actorD.data._source);\n      actor_data.data.spells[`${slot}`].value = actor_data.data.spells[`${slot}`].value + 1;\n      await actorD.update(actor_data);\n    }\n        \n    function getSpellSlots(actorD, level) {\n        return actorD.data.data.spells[`spell${level}`];\n    }\n    \n    function hasAvailableSlot(actorD) {\n         for (let slot in actorD.data.data.spells) {\n             if (actorD.data.data.spells[slot].value < actorD.data.data.spells[slot].max) {\n                 return true;\n             }\n         }\n         return false;\n     }\n    })();",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "exportSource": {
      "world": "darklands",
      "system": "dnd5e",
      "coreVersion": "0.8.8",
      "systemVersion": "1.3.6"
    }
  }
}